#from pygame.examples.video import answer
from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *

# —Ç—É—Ç –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –Ω–∞—à –∫–æ–¥:)

async def start(update,context):
    dialog.mode='main'
    text=load_message('main')
    await send_photo(update,context,'main')
    await send_text(update,context, text)

    # –∞—Å—Å–∏–Ω—Ö—Ä —Ñ-—Ü–∏—è
    await show_main_menu(update,context,{
        'start':'–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
        'profile': '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé',
        'opener': '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
        'message': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
        'date': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
        'gpt': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†'

    })



async def gpt(update,context):
    dialog.mode='gpt'
    text=load_message('gpt')
    await send_photo(update,context,'gpt')
    await send_text(update,context, text)

async def gpt_dialog(update,context):
    text=update.message.text #—á–µ–ª–æ–≤–µ–∫ –≤ —á–∞—Ç –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
    prompt=load_prompt('gpt')
    # –º—ã –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —ç—Ç–æ —á–∞—Ç—É GPT, –∂–¥–µ–º –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é await
    answer=await chatgpt.send_question(prompt,text)
    # –æ—Ç–≤–µ—Ç –±–µ—Ä–µ–º –∏ –ø—Ä–∏—Å—ã–ª–∞–µ–º —á–µ–ª–æ–≤–µ–∫—É –∫–∞–∫ –æ—Ç–≤–µ—Ç —á–∞—Ç–∞ gpt
    await send_text(update,context, answer)



async def hello(update,context):
    if dialog.mode=='gpt':
        await gpt_dialog(update,context)
    else:
        await send_text(update,context, '*–ü—Ä–∏–≤–µ—Ç*')
        await send_text(update,context, '_–ö–∞–∫ –¥–µ–ª–∞?_')
        await send_text(update,context, '–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ '+update.message.text)

        await send_photo(update,context,'avatar_main')
        await send_text_buttons(update,context,'–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å?',{
            'start':'–ó–∞–ø—É—Å—Ç–∏—Ç—å',
            'stop':'–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'
        })


async def hello_button(update,context):
    query=update.callback_query.data
    if query=='start':
        await send_text(update, context, '–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω')
    else:
        await send_text(update, context, '–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

dialog=Dialog()
dialog.mode=None

chatgpt=ChatGptService(token='gpt:IMAtcJ134WVIxVeFe7I2JFkblB3TH88zgyZ5JYpVQKKxZnKk')


app = ApplicationBuilder().token("7830540338:AAEB2Ed9CKCKgrr1tDA4wXsMiERXrCHg1o8").build()
app.add_handler(CommandHandler('start',start))
app.add_handler(CommandHandler('gpt',gpt))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND,hello))
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()
