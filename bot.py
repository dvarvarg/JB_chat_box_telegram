from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *

# —Ç—É—Ç –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –Ω–∞—à –∫–æ–¥:)

async def start(update,context):
    dialog.mode='main'
    text=load_message('main')
    await send_photo(update,context,'main')
    await send_text(update,context, text)

    # –∞—Å—Å–∏–Ω—Ö—Ä —Ñ-—Ü–∏—è
    await show_main_menu(update,context,{
        'start':'–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
        'profile': '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé',
        'opener': '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
        'message': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
        'date': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
        'gpt': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†'
    })


async def gpt(update,context):
    dialog.mode='gpt'
    text=load_message('gpt')
    await send_photo(update,context,'gpt')
    await send_text(update,context, text)


async def gpt_dialog(update,context):
    text=update.message.text #—á–µ–ª–æ–≤–µ–∫ –≤ —á–∞—Ç –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
    prompt=load_prompt('gpt')
    # –º—ã –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —ç—Ç–æ —á–∞—Ç—É GPT, –∂–¥–µ–º –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é await
    answer=await chatgpt.send_question(prompt,text)
    # –æ—Ç–≤–µ—Ç –±–µ—Ä–µ–º –∏ –ø—Ä–∏—Å—ã–ª–∞–µ–º —á–µ–ª–æ–≤–µ–∫—É –∫–∞–∫ –æ—Ç–≤–µ—Ç —á–∞—Ç–∞ gpt
    await send_text(update,context, answer)


# –ø–µ—Ä–µ–≤–æ–¥–∏–º –¥–∏–∞–ª–æ–≥ –≤ —Ä–µ–∂–∏–º –¥–µ–π—Ç–∏–Ω–≥–∞
async def date(update,context):
    dialog.mode='date'
    # —á–∏—Ç–∞–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    # –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–∫–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ date_button
    text=load_message('date')
    await send_photo(update,context,'date')
    await send_text_buttons(update,context, text, {
        'date_grande':'–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ',
        'date_robbie': '–ú–∞—Ä–≥–æ –†–æ–±–±–∏',
        'date_zendaya': '–ó–µ–Ω–¥–µ—è',
        'date_gosling': '–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥',
        'date_hardy': '–¢–æ–º –•–∞—Ä–¥–∏',
    })


async def date_dialog(update, context):
    text=update.message.text
    my_message=await send_text(update,context,'–î–µ–≤—É—à–∫–∞/–ø–∞—Ä–µ–Ω—å –Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...')
    answer =await chatgpt.add_message(text)
    await my_message.edit_text(answer)
    # await send_text(update,context, answer)


async def date_button(update,context):
    query=update.callback_query.data
    await update.callback_query.answer()

    # –ø–µ—Ä–µ–¥–∞–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º –∏ —Ç–µ–∫—Å—Ç
    await send_photo(update,context,query)
    await send_text(update,context,'–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥–µ–≤—É—à–∫—É (–ø–∞—Ä–Ω—è) –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π. ')

    #–∑–∞–≥—Ä—É–∂–∞–µ–º prompt –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ —á–∞—Ç—É gpt
    prompt=load_prompt(query)
    chatgpt.set_prompt(prompt)


async def message(update,context):
    dialog.mode='message'
    text = load_message('message')
    await send_photo(update, context, 'message')
    await send_text_buttons(update, context, text, {
        'message_next':'–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ',
        'message_date':'–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ '

    })
    dialog.list.clear()


async def message_dialog(update,context):
    query=update.callback_query.data
    await update.callback_query.answer()

    prompt=load_prompt(query)
    user_chat_history='\n\n'.join(dialog.list)
    my_message=await send_text(update,context,'ChatGPT –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞ ...')
    answer=await chatgpt.send_question(prompt,user_chat_history)
    await my_message.edit_text(answer)


async def message_button(update,context):
    text=update.message.text
    dialog.list.append(text)


async def hello(update,context):
    if dialog.mode=='gpt':
        await gpt_dialog(update,context)
    if dialog.mode == 'date':
        await date_dialog(update, context)
    if dialog.mode == 'message':
        await message_dialog(update, context)
    else:
        await send_text(update,context, '*–ü—Ä–∏–≤–µ—Ç*')
        await send_text(update,context, '_–ö–∞–∫ –¥–µ–ª–∞?_')
        await send_text(update,context, '–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ '+update.message.text)

        await send_photo(update,context,'avatar_main')
        await send_text_buttons(update,context,'–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å?',{
            'start':'–ó–∞–ø—É—Å—Ç–∏—Ç—å',
            'stop':'–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'
        })


async def hello_button(update,context):
    query=update.callback_query.data
    if query=='start':
        await send_text(update, context, '–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω')
    else:
        await send_text(update, context, '–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')


dialog=Dialog()
dialog.mode=None
dialog.list=[]

chatgpt=ChatGptService(token='gpt:IMAtcJ134WVIxVeFe7I2JFkblB3TH88zgyZ5JYpVQKKxZnKk')

app = ApplicationBuilder().token("7830540338:AAEB2Ed9CKCKgrr1tDA4wXsMiERXrCHg1o8").build()
# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler('start',start))
app.add_handler(CommandHandler('gpt',gpt))
app.add_handler(CommandHandler('date',date))
app.add_handler(CommandHandler('message',message))

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –ø–∏—à–µ—Ç –≤ —á–∞—Ç
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND,hello))

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
app.add_handler(CallbackQueryHandler(date_button, pattern='^date_.*'))
app.add_handler(CallbackQueryHandler(message_button, pattern='^message_.*'))
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()
